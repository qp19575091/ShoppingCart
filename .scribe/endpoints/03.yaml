name: 'Products endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      title: 'Get the products'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The number of the product page. emxample: ?page = 1'
        required: true
        example: 2
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                   "name": "Officiis quia.",
                   "price": "40.68",
                   "quantity_left": 3,
                   "users": {
                       "name": "Prof. Adrien Adams",
                       "email": "Demo@Demo.com"
                   }
              },
              {
                   "name": "Ad consequatur ut.",
                   "price": "35.09",
                   "quantity_left": 3
                   "users": {
                       "name": "Prof. Adrien Adams",
                       "email": "Demo@Demo.com"
                   }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      title: 'Create product'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the products.'
        required: true
        example: 'Explicabo dolorem'
        type: string
      price:
        name: price
        description: 'The price of the products.'
        required: true
        example: 35.35
        type: number
      quantity_left:
        name: quantity_left
        description: 'The quantity_left of the products.'
        required: true
        example: 3
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
              "name": "Explicabo dolorem.",
              "price": "35.35",
              "quantity_left": 3
          }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: |-
          {
              "error": "Forbidden"
          }
        headers: []
        description: '403, Forbidden'
      -
        status: 404
        content: |-
          {
              "error": "Resource Not Found"
          }
        headers: []
        description: '404, Not Found'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      title: 'Show product'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 3
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "name": "Explicabo dolorem.",
              "price": "35.35",
              "quantity_left": 3
          }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: '401, Unauthenticated'
      -
        status: 404
        content: |-
          {
              "error": "Resource Not Found"
          }
        headers: []
        description: '404, Not Found'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      title: 'Update product'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 6
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the products.'
        required: true
        example: 'Explicabo dolorem'
        type: string
      price:
        name: price
        description: 'The price of the products.'
        required: true
        example: 35.35
        type: number
      quantity_left:
        name: quantity_left
        description: 'The quantity_left of the products.'
        required: true
        example: 3
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
              "name": "Explicabo dolorem.",
              "price": "35.35",
              "quantity_left": 3
          }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: |-
          {
              "error": "Forbidden"
          }
        headers: []
        description: '403, Forbidden'
      -
        status: 404
        content: |-
          {
              "error": "Resource Not Found"
          }
        headers: []
        description: '404, Not Found'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      title: 'Delete product'
      description: ''
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 18
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 204
        content: |-
          {

          }
        headers: []
        description: '204'
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: '401, Unauthenticated'
      -
        status: 403
        content: |-
          {
              "error": "Forbidden"
          }
        headers: []
        description: '403, Forbidden'
      -
        status: 404
        content: |-
          {
              "error": "Resource Not Found"
          }
        headers: []
        description: '404, Not Found'
    responseFields: []
